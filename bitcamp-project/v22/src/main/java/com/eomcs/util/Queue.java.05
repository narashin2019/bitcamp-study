package com.eomcs.util;

public class Queue extends LinkedList<Object> implements Cloneable {
  
  public void offer(Object value) { // 큐에서 애드는 오퍼
    this.add(value);
  }

  public Object poll() {//큐에서 겟은 폴
    return this.remove(0); // 스택이나 큐는 값을 아예 꺼내는 것. 조회만 하는게 아님. 따라서 꺼내고 그장소가 없어짐. 원본배열에서 꺼낸걸 없애버림!! 쉘로우
  }


  @Override
  public Queue clone() {
    try {
      // 단순히 객체의 인스턴스 변수를 복제하는 'shallow copy' 수행
      // => Object의 clone()은 'shallow copy'를 수행한다.
      // => Queue에서 poll()을 수행하면 first 노드를 삭제하게 되고,
      //    이때 원본 객체의 노드의 링크 정보를 변경하게 된다.
      // => 따라서 다음에 다시 복제를 수행하면,
      //    원본 노드의 링크 정보가 제거되었기 때문에 제대로 작업을 수행할 수 없다.
      //
      // 해결책?
      // => 원본 객체가 사용하는 노드도 함께 복제해야 한다.
      // => 즉 'deep copy'를 수행해야 한다.
      //
      return (Queue) super.clone();
      
    } catch (CloneNotSupportedException ex) {
      System.out.println(ex);
      return null;
    }
  }

}



