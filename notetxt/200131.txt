200131 금요일

#### 28_4 - 파일 입출력 시에 버퍼 기능 추가 

#### 29 - 바이너리 형식으로 입출력하는 방법

#### 30 - 직렬화와 역직렬화를 이용하여 객체를 통째로 읽고 쓰기
실무에서 잘 안씀 자바 언어로만 가능해서 
실무에서는 xml보다 json더 많이 씀
시리얼라이즈쓰는 순간 자바전용이된다.
다른프로그래밍 언어로 읽을 수 없다.
속도가 느려도 제이슨 형식 28번 추천함.


####com.eomcs.design_pattern.observer.before.
옵저버패던이 등장한 이유
기존 클래스에 손을 대지 않고 기능을 변경하는 방법!

####com.eomcs.design_pattern.observer.after

**디자인패턴: 
기존의 코드를 최소로 손을 대며 
기능  추가 변경 삭제 가능하도록 그런 구조로 만들자.

속도높이자x

유지보수쉬운 구조로 만드는 것!
-> 기존코드를 최소로 적게 변경하고 기능을 추가, 변경, 삭제 쉬운 것.
-> 이런 것이 가능한 구조로 만드는 것.

단점:
-클래스가 점점 늘어나. 기존방식보다 코드가 많아지긴함.



**옵저버 패턴:: 
특정 상태일 때 수행하는 작업을 별도의 "객체"로 분리
=> 방법: 클래스로 정의한다.

특정 상태에 대해 작업을 추가할 경우, 
기존코드 변경 없이 새 클래스만 추가하면 된다!

특정상태에 대해 감시x  관찰자인데 서브젝트상태바뀔때마다 보고해 보고받는 상황
인터페이스의 구현체
정해진 호출규칙대로 객체생성해야함

서브젝트는 
연락을 할 객체의 주소를 가진 어태치가 꼭 필요
연락 더이상 안 받을 객체의 주소를 지우는 디태치가 꼭필요


**추상클래스사용 방법

Class ArrayList<E>
java.lang.Object
java.util.AbstractCollection<E>
java.util.AbstractList<E>
java.util.ArrayList<E>

서브클래스에서 원하는 메서드만 구현하도록 추상클래스를 상속받음.


#### 31_1

#### 31_2 - 애플리케이션을 시작하거나 종료할 때 작업할 옵저버를 추가한다
몇개가 어떤 형식이 리턴이 될지 모르는 데 어케 리턴을 씀.
따라서 Map을 씀. 맵은 바구니.
같은 객체를 파라미터로 공유 ( 주소를 공유)



애플리케이션이 시작했을 때 아름다운 화면을 뿌리고 싶다.
아름다운 화면을 꾸미는 옵저버를 만들면 됨.

기존에 app 클래스 손 대지 않고 (main에 등록은 하나) 
새 기능을 추가할 수 있게됨.