200115 수요일

ppt로 비트캠프 프로젯트 정리함 \git> cd .\eomcs-java-project-2019\

oop ex09, ex10


컬렉션 인터페이스 메서드20개 중에
16개 구현한 앱스트랙트 컬랙션 클래스
https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/AbstractCollection.html#method.summary

https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/AbstractCollection.html#method.summary
메소드 밑에부분 뜻)

Methods declared in class java.lang.Object
clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait
> 서브클래스에서 오버라이딩한거 빼고 나머지 목록이 나옴. 

Methods declared in interface java.util.Collection
equals, hashCode, parallelStream, removeIf, size, spliterator, stream, toArray
>20개 중에서 위에서 구현한 메소드를 뺀 나머지 목록이 나옴 

제목밑에
All Implemented Interfaces:
Iterable<E>, Collection<E> 구현하고 있는 모든 인터페이스 목록.
컬렉션이 이터러블 상속받기 때문에 둘 다 적어준 것. 

직접상속받은 애들>
Direct Known Subclasses:
AbstractList, AbstractQueue, AbstractSet, ArrayDeque, ConcurrentLinkedDeque
(일부는 구현했고 구현안한애들이 있는게 추상클래스고 업스트랙트 안붙은 어레이 디큐는 다 구현한것. )


==============================================================

목록을 관리해주는 객체 = 컬렉션 객체 에서 값을 꺼낼때
toArray해도 되고

  public void listLesson() {
    // toArray()의 리턴 값은 파라미터로 넘겨준 배열의 주소이다. (기존배열그대로씀)
    Lesson[] arr = this.lessonList.toArray(new Lesson[this.lessonList.size()]);
    for (Lesson l : arr) {
      System.out.printf("%d, %s, %s ~ %s, %d\n", 
          l.getNo(), l.getTitle(), l.getStartDate(), 
          l.getEndDate(), l.getTotalHours());
    }
  }



배열을 통째로 받아 반복문 돌리기
인덱스로 값을 호출해서 get으로 
for (int i = 0 ; i < lessonlist.size(); i++) {
Lesson l = lessonList.get(i);
System.out.printf("%d, %s, %s ~ %s, %d\n", 
          l.getNo(), l.getTitle(), l.getStartDate(), 
          l.getEndDate(), l.getTotalHours()); 

}




이터레이터라는 대행자로 꺼내기 

  public void listLesson() {


    // 목록에서 값을 꺼내는 일을 해 줄 Iteraror 객체를 준비한다.
    Iterator<Lesson> iterator = lessonList.iterator();

    // Iterator 객체를 통해 값을 꺼낸다.
    while (iterator.hasNext()) {
      Lesson l = iterator.next();
      System.out.printf("%d, %s, %s ~ %s, %d\n", 
          l.getNo(), l.getTitle(), l.getStartDate(), 
          l.getEndDate(), l.getTotalHours());
    }
  }



이터레이터: 일관된 메서드 호출로 값을 꺼내는 것.
어떤 방식으로 저장했든 


자바에서는 큐를 디큐로 지칭.