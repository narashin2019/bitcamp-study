200205 수요일

**네트워크/네트워킹 개론 참고 서적 읽어보기


v32_4백업 끝
--------------------------------------------------------------
비트캠프프로젝트서버!
# 32_5 - 특정 기능을 수행하는 코드를 메서드로 분리하기

1)     boards = (List<Board>) context.get("boardList");
    lessons = (List<Lesson>) context.get("lessonList");
    members = (List<Member>) context.get("memberList");
인스턴스 변수 선언 위에 다 함.

2) 메서드 추출

3)if 문 대신  스위치케이스문으로 바꿈

================================
비트캠프프로젝트서버!
# 32_6 - 커맨드 패턴을 적용하여 요청 처리 메서드를 객체화하기

(사진)

매소드를 클래스로 정의하여 객체화 하기
각각 1개의 명령어 처리.

> 클라이언트앱처럼 커맨드 패턴을 적용
Command 패턴적용

영어 접미사let 작은 조각
setver + let 서버의 작은 조각 Servlet

===================================

build.gradle : 그레이들 스크립트 파일
README.md: 대문자인이유 - 콘솔창에서 ls 하면 대문자가 먼저 나옴. 현재 폴더가 어떤 폴더인지 정보를 담는다.


====================================


design pattern gof 검색

프록시 패턴: 접근 조절, 비용 절감, 복잡도 감소를 위해 접근이 힘든 객체에 대한 대역을 제공한다.
비용절감 = 유지보수를 쉽게 코드를 간결하게의 의미, 속도빨라짐x

(사진: 프록시 디자인 패턴의 개념도)

프로그램 세계에서 어떤 객체가 다른 객체를 사용한다는 것은 메소드 호출을 할 수 있다는 것.

도구 객체에 대한 사용법이 복잡할 때 
사용법을 객체화한다.
=> 사용법을 별도의 클래스로 정의한다.

사용객체가 도구 객체를 직접사용, 직접 메서드호출하는게 아니라.
클래스 사용법을 통해 간접 사용.


cf.커맨드패턴은 메소드를 객체화 = 클래스로 정의 한다
cf.이터레이터 = 자료구조 객체에서 값을 꺼낸느 기능을 해즈넥스트 넥스트 메소드로 정의해서 일관된 방법으로 꺼내게 함



사용법을 담은 객체를 마치 도구객체인양 써야함.
================
(클래스 다이어그램)

=====================

32.7 데이터 처리 코드를 별도의 클래스로리: 코드 유지부수를 쉽게 하는 구조로 바꾼다.


client -------------. serveer => ~Serveler
			=
사진 참고...

다오객체 만들기
# 32_7 - 데이터 처리 코드를 별도의 클래스로 정의하여 객체화 시키기

서블릿 객체가 간결해졌다
한클래스가 하던 일을 전문 객체로 분리시키면 각각 객체는 사이즈가 작아지면서 간결해진다.


===========================



