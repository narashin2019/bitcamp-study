200219 수요일

bitcamp-docs / sql / Exam04.sql


키: 데이터를 구분할 때 사용하는 값

예) 보통 전화번호가 중복되지 않음. 이메일, 이름+전화번호 , 이름+이메일
여러개 갑을 묶어서 구분자로 사용할 수도 있음.
어차피 전화번호로 구분할 수 있다면 묶을 필요 업음.


-> 최소키 = 후보키 = candicate key

전화? 이메일? 뭘로할까 하다가
이메일로 선정.
학생정보 구분할때는 이메일로 합시다.

(이메일) 최소키=후보키 candidatekey에서 선정한 키를 primary key 주키 라고 부름(pk)
후보키 중 선정은 안됐지만 키로 사용할 수 있는키 = alternate key 대안키 (전화), uniq 컬럼


프라이머리 키는 한번 결정되면 바꿀 수 없다.
> 이메일 바꾸고 싶으면 프라이머리키 하지마

전화번호고 바꾸고 싶으면 프라이머리키 하지마



> 이런경우 뭘로 pk로?
 > pk의 값은 변경 할 수 없다. 해결책?
> 인공키 artificial key


> 인공키를 쓴다면 "회원번호" 등을 만듬/.


> 페이스북은 내부적으로 인공키를 부여. 고유숫자 부여해서 씀. 
이메일을 바꾸든 전화번호를 바꾸든 상관없는 것

> 대부분 서비스 하는 임의로 부여한 인공키 값으로 구분 
 


> 팀명 외에 팀번호를 따로 부여 팀번호로 팀을 구분. 
팀번호 pk , 팀명은 얼터네이티브키 유니크 컬럼.


> 회원번호 회원명 전화 : 회원번호가 pk


*****팀번호를 Fk로 설정. FK(Foreign Key)
존재하지 않는 데이터 값을 막고 한번 사용한 것을 지울수 없게 하는 fk
fk는 멤버의 팀번호는 팀의 팀번호를 가리킴.
멤버에 데이터 집어넣을때는 팀의 팀번호에서 존재하지 않는 것은 들어갈 수 없다.
fk로 설정되면 회원중에서 1번, 2번팀 회원이 있을 때, 팀에서 2번팀 지우려고 할 때 막는다.

=> 이런 관리를 해주는게 DBMS 이다
데이터가 유효하게 사용될 수 있도록 제약 조건을 관리한다. 
1) 데이터를 파일에 저장/조회/ 변경/삭제
2) 제약조건에 따라 관리하는 일을 한다. 


>데이터 중복을 막기 위해 데이터를 쪼갠다.
>두 개 테이블의 관계는

[team]---------[member]

하나의 팀에는 0개 이상 멤버 데이터와 관계 맺는다 (그림_)


fk 가 있는 쪽 child table / 없는 쪽 parent table 
다 : 1


parenttable [team] 1 : 다 [mamber] ㅊchild table

RelationnalDBMS = RDBMS 데이터끼리 관계{가 있다. 



* 데이터 > 중복 > 쪼개 > fk > 부모/자식 관계가 형성 > RDBMS
 
* 데이터 > 중복 > 쪼개 > 관계 형성 > 부모 / 자식 관계 / fk 형성 > RDBMS


관계를 형성해서 데이터를 관리하는 것은 RDBMS라고 한다. 

 mysql -u study -p
1111


use studydb;

drop table test1;

select * from test2;

show databases;

desc stnt;

참조 당하는 쪽은 부모 참조하는 쪽이 자식

UNIQUE: 중복되어서는 안된다.
프라이머리키도 유니키도 색인표가 자동생성되긴함. 

ASC: 정렬조건 작은것부터 큰것으로 



CREATE INDEX 유니크 빠지면 중복허용. 색인표만 만듬.


fk 있는 쪽이 child




간단한 데이터는 서브쿼리 써도 되나 데이터양이 많을 때는 속도가 너무 느리므로 join을 써라

 



